module Statements
imports
  expressions/Table
  lexical/Whitespace  
  lexical/Keyword
  lexical/Literal  
  
exports
  sorts Stms ExecStm DataStm
  context-free syntax
    {ExecStm ";" }+ ";" -> Stms {cons("Stms")}

    DataStm -> ExecStm
    
    DeleteStm    -> DataStm
    SelectStm    -> DataStm
    InsertStm    -> DataStm
    UpdateStm    -> DataStm
    TempTableDec -> DataStm
    
    QueryExpr -> SelectStm {cons("SelectStm")}
    
    "INSERT" "INTO" TableRef ValuesClause -> InsertStm {cons("InsertStm")}
    "INSERT"        TableRef ValuesClause -> InsertStm {cons("InsertStm")}
    
    "VALUES" {RowValues ","}+ -> ValuesClause {cons("ValuesClause")}
    "VALUE"  {RowValues ","}+ -> ValuesClause {cons("ValuesClause")}
    
    "UPDATE" UpdatableTable  SetValues OrderByClause? LimitClause? -> UpdateStm {cons("UpdateStm")}
    "UPDATE" UpdatableTables SetValues                             -> UpdateStm {cons("UpdateStm")}
    
    "DELETE" "FROM" BaseTable WhereClause? OrderByClause? LimitClause? -> DeleteStm {cons("DeleteStm")}
    "DELETE"        {BaseTable ","}+ "FROM"  TableRef WhereClause?     -> DeleteStm {cons("DeleteStm")}
    "DELETE" "FROM" {BaseTable ","}+ "USING" TableRef WhereClause?     -> DeleteStm {cons("DeleteStm")}
    
    BaseTable     -> UpdatableTable
    JoinTableExpr -> UpdatableTable
    {UpdatableTable ","}+ -> UpdatableTables {cons("UpdatableTables")}
    
    SetClause WhereClause? -> SetValues {cons("SetValues")}
    
    "SET" {(ColumnName "=" RowValue) ","}+ -> SetClause {cons("SetClause")}
    
    "(" {RowValue ","}* ")" -> RowValues {cons("RowValues")}
    
    UnsignedLit -> RowValue
    "DEFAULT"   -> RowValue {cons("Default")}    
