module Statements
imports
  expressions/Table
  lexical/Whitespace  
  lexical/Keyword
  lexical/Literal  
  
exports
  sorts Stms ExecStm DataStm
  context-free syntax
    ExecStm+ -> Stms {cons("Stms")}

    DataStm    ";" -> ExecStm {cons("Stm")}
    DataDefStm ";" -> ExecStm {cons("Stm")}
    
    CreateViewStm -> DataDefStm
    DropViewStm   -> DataDefStm
    
    DeleteStm    -> DataStm
    SelectStm    -> DataStm
    InsertStm    -> DataStm
    UpdateStm    -> DataStm
    
    %% Data definition statements
    "CREATE" OrReplaceClause? "VIEW" ViewName ColumnNames? "AS" SelectStm -> CreateViewStm {cons("CreateView")}
    "DROP" "VIEW" IfExistsClause? {ViewName ","}+                         -> DropViewStm {cons("DropView")}
    
    BaseTable                 -> ViewName {cons("ViewName")}
    "OR" "REPLACE"            -> OrReplaceClause {cons("OrReplace")}
    "IF" "EXISTS"             -> IfExistsClause {cons("IfExists")}
    "(" {ColumnName ","}* ")" -> ColumnNames {cons("ColumnNames")}
    
    
    %% Data statements
    QueryExpr -> SelectStm %%{cons("SelectStm")}
    
    "INSERT" IgnoreClause? "INTO"? BaseTable ColumnNames?  ValuesClause OnDuplicateKeyClause?         -> InsertStm {cons("Insert")}
    "INSERT" IgnoreClause? "INTO"? BaseTable "SET" {ColumnValueAssignment ","}+ OnDuplicateKeyClause? -> InsertStm {cons("Insertm")}
    
    ColumnName "=" RowValue -> ColumnValueAssignment {cons("ColumnValueAssignment")}

    "IGNORE" -> IgnoreClause {cons("Ignore")}
    "VALUES" {RowValues ","}+ -> ValuesClause {cons("ValuesClause")}
    "VALUE"  {RowValues ","}+ -> ValuesClause {cons("ValuesClause")}
    "ON" "DUPLICATE" "KEYS" "UPDATE" {ColumnValueAssignment ","}+ -> OnDuplicateKeyClause {cons("OnDuplicateKeyClause")}
    
    "UPDATE" IgnoreClause? UpdatableTable  SetValues OrderByClause? LimitClause? -> UpdateStm {cons("Update")}
    "UPDATE" IgnoreClause? UpdatableTables SetValues                             -> UpdateStm {cons("Updatem")}
    
    BaseTable                                -> UpdatableTable
    JoinTableExpr                            -> UpdatableTable
    UpdatableTable "," {UpdatableTable ","}+ -> UpdatableTables {cons("UpdatableTables")}
    
    "DELETE" "FROM" BaseTable WhereClause? OrderByClause? LimitClause?  -> DeleteStm {cons("Delete")}
    "DELETE"        {DeletableTable ","}+ "FROM"  TableRef WhereClause? -> DeleteStm {cons("Deletem")}
    "DELETE" "FROM" {DeletableTable ","}+ "USING" TableRef WhereClause? -> DeleteStm {cons("Deletem")}
    
    BaseTable         -> DeletableTable
    BaseTable "." "*" -> DeletableTable {cons("DeleteableTableDotAll")}
    
    SetClause WhereClause? -> SetValues {cons("SetValues")}
    
    "SET" {ColumnValueAssignment ","}+ -> SetClause {cons("SetClause")}
    
    
    "(" {RowValue   ","}* ")" -> RowValues {cons("RowValues")}
    "(" {ColumnName ","}* ")" -> ColumnNames {cons("ColumnNames")}
    
    UnsignedLit -> RowValue
    "DEFAULT"   -> RowValue {cons("Default")}
