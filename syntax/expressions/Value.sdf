module expressions/Value
imports
  Misc
  lexical/Literal
  expressions/Primary[NumValExpr]
  expressions/ValueSpecification

exports
  sorts NumValExpr ValExpr
  context-free syntax
    NumValExpr -> ValExpr

    "+" NumValExpr -> NumValExpr {cons("Plus")}
    "-" NumValExpr -> NumValExpr {cons("Minus")}
    
    "(" NumValExpr ")" -> NumValExpr {bracket} 
    NumValExpr "*" NumValExpr -> NumValExpr {left, cons("Mul")}
    NumValExpr "/" NumValExpr -> NumValExpr {left, cons("Div")}

    NumValExpr "+" NumValExpr -> NumValExpr {left, cons("Plus")}
    NumValExpr "-" NumValExpr -> NumValExpr {left, cons("Min")}
 
  context-free priorities
      {
        "+" NumValExpr -> NumValExpr
        "-" NumValExpr -> NumValExpr
      }
    > {left:
        NumValExpr "*" NumValExpr -> NumValExpr
        NumValExpr "/" NumValExpr -> NumValExpr
      } 
    > {left:
        NumValExpr "+" NumValExpr -> NumValExpr
        NumValExpr "-" NumValExpr -> NumValExpr
      }

  context-free syntax
  	DateValExpr -> ValExpr {avoid}
  	
  	CharStringLit -> DateValLit {cons("DateVal")}
  	ColumnRef     -> DateValLit
  	
  	DateValLit -> DateValExpr
  	
  	ExtractFun "(" DateValLit ")" -> DateValExpr {cons("ExtractFun")}
  	
  	"YEAR"  -> ExtractFun {cons("Year")}
  	"year"  -> ExtractFun {cons("Year")}
  	"MONTH" -> ExtractFun {cons("Month")}
  	"month" -> ExtractFun {cons("Month")}
  	"WEEK"  -> ExtractFun {cons("Week")}
  	"week"  -> ExtractFun {cons("Week")}
  	"DAY"   -> ExtractFun {cons("Day")}
  	"day"   -> ExtractFun {cons("Day")}