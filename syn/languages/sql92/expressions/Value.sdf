module languages/sql92/expressions/Value
imports
  languages/sql92/Misc
  languages/sql92/lexical/Literal

exports
  sorts ValExp
  context-free syntax
    Lit        -> ValExp {cons("Lit")}
    ColumnRef  -> ValExp
    AggrFunRef -> ValExp {cons("Aggr")}

    "+" ValExp -> ValExp {cons("Plus")}
    "-" ValExp -> ValExp {cons("Minus")}
    
    "(" ValExp ")"    -> ValExp {bracket} 
    ValExp "*" ValExp -> ValExp {left, cons("Mul")}
    ValExp "/" ValExp -> ValExp {left, cons("Div")}

    ValExp "+" ValExp -> ValExp {left, cons("Plus")}
    ValExp "-" ValExp -> ValExp {left, cons("Min")}

    "COUNT(*)"                        -> AggrFunRef {cons("CountAll")}
    AggrFun "(" DupElim?  ValExp ")"  -> AggrFunRef {cons("Aggr")}

    "AVG"   -> AggrFun {cons("Avg")  }
    "MAX"   -> AggrFun {cons("Max")  }
    "MIN"   -> AggrFun {cons("Min")  }
    "SUM"   -> AggrFun {cons("Sum")  }
    "COUNT" -> AggrFun {cons("Count")}
 
  context-free priorities
      {
        "+" ValExp -> ValExp
        "-" ValExp -> ValExp
      }
    > {left:
        ValExp "*" ValExp -> ValExp
        ValExp "/" ValExp -> ValExp
      } 
    > {left:
        ValExp "+" ValExp -> ValExp
        ValExp "-" ValExp -> ValExp
      }
