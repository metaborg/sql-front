module languages/sql92/expressions/Primary[E]
imports
  languages/sql92/lexical/Literal
  languages/sql92/expressions/Case
  languages/sql92/expressions/Cast

exports
  sorts AggrFun
  context-free syntax
    UnsignedValSpec -> E
    ColumnRef       -> E
    CaseExpr        -> E 
    CastSpec        -> E

    "(" TableExpr ")" -> E {cons("SubQuery")}
    "(" ValExpr ")"   -> E {bracket}

    "COUNT(*)"                        -> E {cons("CountAll")}
    AggrFun "(" DupElim?  ValExpr ")" -> E {cons("Aggr")}

    "AVG"   -> AggrFun {cons("Avg")  }
    "MAX"   -> AggrFun {cons("Max")  }
    "MIN"   -> AggrFun {cons("Min")  }
    "SUM"   -> AggrFun {cons("Sum")  }
    "COUNT" -> AggrFun {cons("Count")}
