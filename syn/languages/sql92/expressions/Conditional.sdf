module languages/sql92/expressions/Conditional
imports
  languages/sql92/expressions/Table
  languages/sql92/expressions/Value
 
exports
  sorts CondExp
  context-free syntax

    CondExp "AND" CondExp -> CondExp {left, cons("And")} 
    CondExp "OR"  CondExp -> CondExp {left, cons("Or")} 
    "NOT" CondExp         -> CondExp {cons("Not")} 
    "(" CondExp ")"       -> CondExp {bracket} 

    ValExp CompOp ValExp -> CondExp {non-assoc, cons("Comparison")}

    RowConstructor "IN" "(" TableExp ")"        -> CondExp {cons("In")}
    RowConstructor "NOT" "IN" "(" TableExp ")"  -> CondExp {cons("NotIn")}

    RowConstructor CompOp "ALL"  "(" TableExp ")" -> CondExp {cons("AllComp")}
    RowConstructor CompOp "ANY"  "(" TableExp ")" -> CondExp {cons("AnyComp")}
    RowConstructor CompOp "SOME" "(" TableExp ")" -> CondExp {cons("SomeComp")}

    "="  -> CompOp {cons("EqOp")  }
    "<"  -> CompOp {cons("LtOp")  }
    "<=" -> CompOp {cons("LtEqOp")}
    ">"  -> CompOp {cons("GtOp")  }
    ">=" -> CompOp {cons("GtEqOp")}
    "<>" -> CompOp {cons("LtGtOp")}
   
  context-free priorities
     "NOT" CondExp         -> CondExp
    > CondExp "AND" CondExp -> CondExp
    > CondExp "OR" CondExp  -> CondExp