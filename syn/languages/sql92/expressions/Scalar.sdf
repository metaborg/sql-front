module languages/sql92/expressions/Scalar
imports
  languages/sql92/Misc
  languages/sql92/lexical/Literal

exports
  sorts ScalarExp
  context-free syntax
    NumExp     -> ScalarExp
    
    Lit        -> NumExp {cons("Lit")}
    ColumnRef  -> NumExp
    AggrFunRef -> NumExp {cons("Aggr")}

    "+" NumExp -> NumExp {cons("Plus")}
    "-" NumExp -> NumExp {cons("Minus")}
    
    "(" NumExp ")"    -> NumExp {bracket} 
    NumExp "*" NumExp -> NumExp {left, cons("Mul")}
    NumExp "/" NumExp -> NumExp {left, cons("Div")}

    NumExp "+" NumExp -> NumExp {left, cons("Plus")}
    NumExp "-" NumExp -> NumExp {left, cons("Min")}

    "COUNT(*)"                           -> AggrFunRef {cons("CountAll")}
    AggrFun "(" DupElim?  ScalarExp ")"  -> AggrFunRef {cons("Aggr")}

    "AVG"   -> AggrFun {cons("Avg")  }
    "MAX"   -> AggrFun {cons("Max")  }
    "MIN"   -> AggrFun {cons("Min")  }
    "SUM"   -> AggrFun {cons("Sum")  }
    "COUNT" -> AggrFun {cons("Count")}
 
  context-free priorities
      {
        "+" NumExp -> NumExp
        "-" NumExp -> NumExp
      }
    > {left:
        NumExp "*" NumExp -> NumExp
        NumExp "/" NumExp -> NumExp
      } 
    > {left:
        NumExp "+" NumExp -> NumExp
        NumExp "-" NumExp -> NumExp
      }
