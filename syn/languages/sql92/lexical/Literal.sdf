%%%
 %% @todo Bit string literals
 %% @todo Hex string literals
 %% @todo National character string literal
 %% @todo Datetime literal
 %% @todo Interval literal
 %%%
module languages/sql92/lexical/Literal
exports
  sorts Lit
  context-free syntax
    UnsignedNumLit -> UnsignedLit
    GeneralLit     -> UnsignedLit

    CharStringLit     -> GeneralLit
    NatCharStringLit  -> GeneralLit
    BitStringLit      -> GeneralLit
    HexStringLit      -> GeneralLit
    DateTimeStringLit -> GeneralLit
    IntervalLit       -> GeneralLit

    ApproxNumLit  -> UnsignedNumLit {cons("ApproxNum")}
    ExactNumLit   -> UnsignedNumLit {cons("ExactNum")}

  sorts ExactNumLit ApproxNumLit
  lexical syntax
    [0-9]+ -> NumDigits  
    [0-9]* "." [0-9]* -> NumDigits
           "."        -> NumDigits {reject}
           
    NumDigits -> ExactNumLit

    NumDigits Exponent -> ApproxNumLit    
    [eE] SignedInteger -> Exponent
    [\+\-]? [0-9]+ -> SignedInteger    
    
    [0-9]+ -> UnsignedInteger        

  lexical restrictions
    NumDigits     -/- [0-9]
    SignedInteger -/- [0-9]    
    
  %% @todo Support character set stuff?
  sorts CharStringLit
  syntax
    "'" <CharString-LEX> "\'" -> <CharStringLit-CF> {cons("CharString")}

  lexical syntax
    (~[\'] | "\'\'")* -> CharString
